width = .5,
color = NA, position = 'identity') +
coord_polar(start = -pi/12) +
scale_fill_viridis(option = "magma",
direction = -1,
breaks = c(max(dados$ano), min(dados$ano)),
guide = guide_colourbar(ticks = FALSE)) +
scale_y_continuous(labels = function(v){format(v/1e6, big.mark = ".", decimal.mark = ",")})+
labs(x = NULL, y = "R$ milhões", fill = NULL,
title = "Sazonalidade da arrecadação mensal do IRPF",
subtitle = "Valores de jan/1997 a abr/2019, atualizados pelo IPCA",
caption = "Fonte: \"Ressignificando o Resultado do Tesouro Nacional\"") +
tema() + theme(panel.grid.major.x = element_line(size = 0.25,  color = "#555555", #para sair no png. na visualização aqui usei size = .05 e color = #DDDDDD
linetype = "dotted"),
legend.text = element_text(size = 8),
legend.position = "right")
sazo_barra
max(dados$ano)
min(dados$ano)
ggplot(dados %>% arrange(desc(ano)),
aes(x = nome_mes,
fill = cor)) + #ano)) +
geom_col(aes(y = valor),
alpha = 1,
width = .5,
color = NA, position = 'identity') +
coord_polar(start = -pi/12) +
scale_fill_viridis(option = "magma",
direction = -1,
breaks = c(max(dados$ano), min(dados$ano)),
guide = guide_colourbar(ticks = FALSE)) +
scale_y_continuous(labels = function(v){format(v/1e6, big.mark = ".", decimal.mark = ",")})+
labs(x = NULL, y = "R$ milhões", fill = NULL,
title = "Sazonalidade da arrecadação mensal do IRPF",
subtitle = "Valores de jan/1997 a abr/2019, atualizados pelo IPCA",
caption = "Fonte: \"Ressignificando o Resultado do Tesouro Nacional\"") +
tema() + theme(panel.grid.major.x = element_line(size = 0.25,  color = "#555555", #para sair no png. na visualização aqui usei size = .05 e color = #DDDDDD
linetype = "dotted"),
legend.text = element_text(size = 8),
legend.position = "right")
ggplot(dados %>% arrange(desc(ano)),
aes(x = nome_mes,
fill = cor)) + #ano)) +
geom_col(aes(y = valor),
alpha = 1,
width = .5,
color = NA, position = 'identity') +
coord_polar(start = -pi/12) +
scale_fill_viridis_d(option = "magma",
direction = -1,
breaks = c(max(dados$ano), min(dados$ano)),
guide = guide_colourbar(ticks = FALSE)) +
scale_y_continuous(labels = function(v){format(v/1e6, big.mark = ".", decimal.mark = ",")})+
labs(x = NULL, y = "R$ milhões", fill = NULL,
title = "Sazonalidade da arrecadação mensal do IRPF",
subtitle = "Valores de jan/1997 a abr/2019, atualizados pelo IPCA",
caption = "Fonte: \"Ressignificando o Resultado do Tesouro Nacional\"") +
tema() + theme(panel.grid.major.x = element_line(size = 0.25,  color = "#555555", #para sair no png. na visualização aqui usei size = .05 e color = #DDDDDD
linetype = "dotted"),
legend.text = element_text(size = 8),
legend.position = "right")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ckanr)
library(readxl)
library(scales)
#library(ipeaData)
library(extrafont)
library(gganimate)
library(RColorBrewer)
library(lubridate)
library(gifski)
library(animation)
tema <- function(){
theme_minimal() +
theme(
text = element_text(family = "Open Sans", colour = "grey20"),
axis.text = element_text(family = "Open Sans", colour = "grey20", size = 14), # era 15
title = element_text(face = "bold"), # size para o Shiny
plot.subtitle = element_text(family = "Open Sans Condensed", face = "plain", size = 20, color = "#1E4C7A"),
plot.caption = element_text(face = "italic"),
panel.grid.minor = element_blank(),
legend.text = element_text(size = 15), # era 18
legend.title = element_text(size = 15), # tb era 18
axis.ticks = element_line(size = 0.5),
axis.ticks.length = unit(.25, "cm"),
axis.title = element_text(size = 14), # era 15
legend.position = 'bottom')
}
recurso_TT <- resource_show(id="bf69babd-ac07-40ce-90ff-c8e07ec8c8bf",url="https://apickan.tesouro.gov.br/ckan")
download.file(recurso_TT$url, destfile = "./divida.xlsx", mode = 'wb' )
tabela <- read_excel("divida.xlsx", skip = 4)
resgates <- tabela %>%
filter(.[1] == "RESGATES") %>% # (1)
select(-1) %>% # (2)
gather(key = Mes_Ano, value = Valor) %>%
separate(Mes_Ano, into = c("Mes", "Ano"), sep = "/") %>%
filter(!is.na(Ano)) %>% # (3)
mutate(Ano = as.integer(paste0('20',Ano)), # (4)
Mes = factor(Mes, levels = c("Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"))) %>%
filter(Ano > 2006) # (5)
# dados_plot_cor <- resgates %>% filter(Ano == 2014)
dados_plot_cor <- resgates
plot1 <- ggplot(dados_plot_cor, aes(x = Mes, y = Valor, color = -Valor)) +
geom_point(size = 3) +
geom_text(aes(label = format(round(Valor/1000,0),
big.mark = ".",
decimal.mark = ","),
y = Valor + 10000),
size = 4, family = "Source Sans Pro") +
scale_colour_gradientn(colours = rev(brewer.pal(8, "YlOrRd")[2:8])) +
coord_polar(theta = "x", start = 0, direction = 1) +
scale_y_continuous(labels = function(x) {format(x/1000, big.mark = ".", decimal.mark = ",")}) +
labs(
y = "Bilhões de R$",
x = NULL
) +
tema() +
theme(legend.position = 'none',
panel.grid.major.y = element_line(color = "grey80", linetype = "dotted"),
panel.grid.major.x = element_line(color = "grey90", linetype = "solid"),
axis.title.y = element_text(hjust = 0.85))
plot_din1 <- plot1 +
labs(subtitle = "{frame_time}") +
transition_time(Ano) +
ease_aes('linear')
animate(plot_din1, nframes = 100, height = 480, width = 800, type = "cairo")
plot_din1 <- plot1 +
labs(subtitle = "{frame_time}") +
transition_time(Ano) +
shadow_mark(alpha = .5, size = 1, fill = "grey40") +
ease_aes('linear')
animate(plot_din1, nframes = 100, height = 480, width = 800, type = "cairo")
plot_din1 <- plot1 +
labs(subtitle = "{frame_time}") +
transition_time(Ano) +
shadow_mark(alpha = .5, size = 3, color = "grey40") +
ease_aes('linear')
animate(plot_din1, nframes = 100, height = 480, width = 800, type = "cairo")
plot_din1 <- plot1 +
labs(subtitle = "{frame_time}") +
transition_time(Ano) +
shadow_mark(alpha = .15, size = 3, color = "grey40") +
ease_aes('linear')
animate(plot_din1, nframes = 100, height = 480, width = 800, type = "cairo")
plot_din1 <- plot1 +
labs(subtitle = "{frame_time}") +
transition_time(Ano) +
shadow_mark(alpha = .15, size = 1, color = "grey40", exclude_layer = 2) +
ease_aes('linear')
animate(plot_din1, nframes = 100, height = 480, width = 800, type = "cairo")
plot_din1 <- plot1 +
labs(subtitle = "{frame_time}") +
transition_time(Ano) +
shadow_wake(alpha = .15, size = 1, color = "grey40", exclude_layer = 2) +
ease_aes('linear')
plot_din1 <- plot1 +
labs(subtitle = "{frame_time}") +
transition_time(Ano) +
shadow_wake(alpha = .15, size = 1, exclude_layer = 2) +
#shadow_mark(alpha = .15, size = 1, color = "grey40", exclude_layer = 2) +
ease_aes('linear')
plot_din1 <- plot1 +
labs(subtitle = "{frame_time}") +
transition_time(Ano) +
shadow_wake(wake_length = 1, alpha = .15, size = 1, exclude_layer = 2) +
#shadow_mark(alpha = .15, size = 1, color = "grey40", exclude_layer = 2) +
ease_aes('linear')
animate(plot_din1, nframes = 100, height = 480, width = 800, type = "cairo")
plot_din1 <- plot1 +
labs(subtitle = "{frame_time}") +
transition_time(Ano) +
#shadow_wake(wake_length = 1, alpha = .15, size = 1, exclude_layer = 2) +
shadow_mark(alpha = .15, size = 2, color = "grey60", exclude_layer = 2) +
ease_aes('linear')
animate(plot_din1, nframes = 100, height = 480, width = 800, type = "cairo")
library(viridis)
ggplot(dados_plot_cor, aes(x = Mes, y = Valor, color = -Valor)) +
geom_point(size = 3) +
geom_text(aes(label = format(round(Valor/1000,0),
big.mark = ".",
decimal.mark = ","),
y = Valor + 10000),
size = 4, family = "Source Sans Pro") +
scale_color_viridis_d(option = "viridis") +
#scale_colour_gradientn(colours = rev(brewer.pal(8, "YlOrRd")[2:8])) +
coord_polar(theta = "x", start = 0, direction = 1) +
scale_y_continuous(labels = function(x) {format(x/1000, big.mark = ".", decimal.mark = ",")}) +
labs(
y = "Bilhões de R$",
x = NULL
) +
tema() +
theme(legend.position = 'none',
panel.grid.major.y = element_line(color = "grey80", linetype = "dotted"),
panel.grid.major.x = element_line(color = "grey90", linetype = "solid"),
axis.title.y = element_text(hjust = 0.85))
ggplot(dados_plot_cor, aes(x = Mes, y = Valor, color = -Valor)) +
geom_point(size = 3) +
geom_text(aes(label = format(round(Valor/1000,0),
big.mark = ".",
decimal.mark = ","),
y = Valor + 10000),
size = 4, family = "Source Sans Pro") +
scale_color_viridis(option = "viridis") +
#scale_colour_gradientn(colours = rev(brewer.pal(8, "YlOrRd")[2:8])) +
coord_polar(theta = "x", start = 0, direction = 1) +
scale_y_continuous(labels = function(x) {format(x/1000, big.mark = ".", decimal.mark = ",")}) +
labs(
y = "Bilhões de R$",
x = NULL
) +
tema() +
theme(legend.position = 'none',
panel.grid.major.y = element_line(color = "grey80", linetype = "dotted"),
panel.grid.major.x = element_line(color = "grey90", linetype = "solid"),
axis.title.y = element_text(hjust = 0.85))
plot1 <- ggplot(dados_plot_cor, aes(x = Mes, y = Valor, color = -Valor)) +
geom_point(size = 3) +
geom_text(aes(label = format(round(Valor/1000,0),
big.mark = ".",
decimal.mark = ","),
y = Valor + 10000),
size = 4, family = "Source Sans Pro") +
scale_color_viridis(option = "viridis") +
#scale_colour_gradientn(colours = rev(brewer.pal(8, "YlOrRd")[2:8])) +
coord_polar(theta = "x", start = 0, direction = 1) +
scale_y_continuous(labels = function(x) {format(x/1000, big.mark = ".", decimal.mark = ",")}) +
labs(
y = "Bilhões de R$",
x = NULL
) +
tema() +
theme(legend.position = 'none',
panel.grid.major.y = element_line(color = "grey80", linetype = "dotted"),
panel.grid.major.x = element_line(color = "grey90", linetype = "solid"),
axis.title.y = element_text(hjust = 0.85))
plot1
plot_din1 <- plot1 +
labs(subtitle = "Resgates Mensais da Dívida Pública Federal em {frame_time}") +
transition_time(Ano) +
#shadow_wake(wake_length = 1, alpha = .15, size = 1, exclude_layer = 2) +
shadow_mark(alpha = .15, size = 2, color = "grey60", exclude_layer = 2) +
ease_aes('linear')
animate(plot_din1, nframes = 100, height = 480, width = 800, type = "cairo")
plot1 <- ggplot(dados_plot_cor, aes(x = Mes, y = Valor, color = -Valor)) +
geom_point(size = 3) +
geom_text(aes(label = format(round(Valor/1000,0),
big.mark = ".",
decimal.mark = ","),
y = Valor + 10000),
size = 4, family = "Source Sans Pro") +
scale_color_viridis(option = "inferno") +
#scale_colour_gradientn(colours = rev(brewer.pal(8, "YlOrRd")[2:8])) +
coord_polar(theta = "x", start = 0, direction = 1) +
scale_y_continuous(labels = function(x) {format(x/1000, big.mark = ".", decimal.mark = ",")}) +
labs(
y = "Bilhões de R$",
x = NULL
) +
tema() +
theme(legend.position = 'none',
panel.grid.major.y = element_line(color = "grey80", linetype = "dotted"),
panel.grid.major.x = element_line(color = "grey90", linetype = "solid"),
axis.title.y = element_text(hjust = 0.85))
plot_din1 <- plot1 +
labs(subtitle = "Resgates Mensais da Dívida Pública Federal em {frame_time}") +
transition_time(Ano) +
#shadow_wake(wake_length = 1, alpha = .15, size = 1, exclude_layer = 2) +
#shadow_mark(alpha = .15, size = 2, color = "grey60", exclude_layer = 2) +
ease_aes('linear')
animate(plot_din1, nframes = 100, height = 480, width = 800, type = "cairo")
plot1 <- ggplot(dados_plot_cor, aes(x = Mes, y = Valor, color = -Valor)) +
geom_point(size = 3) +
geom_text(aes(label = format(round(Valor/1000,0),
big.mark = ".",
decimal.mark = ","),
y = Valor + 10000),
size = 4, family = "Source Sans Pro") +
scale_color_viridis(option = "plasma") +
#scale_colour_gradientn(colours = rev(brewer.pal(8, "YlOrRd")[2:8])) +
coord_polar(theta = "x", start = 0, direction = 1) +
scale_y_continuous(labels = function(x) {format(x/1000, big.mark = ".", decimal.mark = ",")}) +
labs(
y = "Bilhões de R$",
x = NULL
) +
tema() +
theme(legend.position = 'none',
panel.grid.major.y = element_line(color = "grey80", linetype = "dotted"),
panel.grid.major.x = element_line(color = "grey90", linetype = "solid"),
axis.title.y = element_text(hjust = 0.85))
plot_din1 <- plot1 +
labs(subtitle = "Resgates Mensais da Dívida Pública Federal em {frame_time}") +
transition_time(Ano) +
#shadow_wake(wake_length = 1, alpha = .15, size = 1, exclude_layer = 2) +
#shadow_mark(alpha = .15, size = 2, color = "grey60", exclude_layer = 2) +
ease_aes('linear')
animate(plot_din1, nframes = 100, height = 480, width = 800, type = "cairo")
anim_save("resgates_divida_bolinhas.gif", animation = last_animation())
graf2 <- ggplot(dados, aes(x = nome_mes, group = ano)) +
geom_line(aes(y = valor, color = ano),
size = 1.5) +
coord_polar(start = -pi/12) +
scale_y_continuous(labels = function(v){format(v/1e6, big.mark = ".", decimal.mark = ",")})+
scale_color_viridis(option = "magma",
direction = -1,
breaks = c(max(dados$ano), min(dados$ano))) +
labs(x = NULL, y = "R$ milhões", fill = NULL, color = NULL,
title = "Sazonalidade da arrecadação mensal do IRPF",
subtitle = "Valores de jan/1997 a abr/2019, atualizados pelo IPCA",
caption = "Fonte: \"Ressignificando o Resultado do Tesouro Nacional\"") +
tema() + theme(panel.grid.major.x = element_line(size = .4,  color = "#444444",
linetype = "dotted"),
legend.text = element_text(size = 8),
axis.title.y = element_text(hjust = 0.6)) #angle = 0
graf2
graf_anim2 <- graf2 + complemento_tema_gif() +
labs(subtitle = 'Valores de {closest_state}, atualizados pelo IPCA') +
transition_states(ano,
transition_length = 2,
state_length = 1) +
shadow_mark(alpha = .2, size = 1)
graf_anim2 %>% animate(type = "cairo", nframes = 210)
graf_anim2 <- graf2 + complemento_tema_gif() +
labs(subtitle = 'Valores de {closest_state}, atualizados pelo IPCA') +
transition_states(ano,
transition_length = 3,
state_length = 1) +
shadow_mark(alpha = .2, size = 1)
graf_anim2 %>% animate(type = "cairo", nframes = 150)
graf_anim2 <- graf2 + complemento_tema_gif() +
labs(subtitle = 'Valores de {closest_state}, atualizados pelo IPCA') +
transition_states(ano,
transition_length = 1,
state_length = 3) +
shadow_mark(alpha = .2, size = 1)
graf_anim2 %>% animate(type = "cairo", nframes = 150)
graf_anim2 <- graf2 + complemento_tema_gif() +
labs(subtitle = 'Valores de {closest_state}, atualizados pelo IPCA') +
transition_states(ano,
transition_length = 2,
state_length = 3) +
shadow_mark(alpha = .2, size = 1)
graf_anim2 %>% animate(type = "cairo", nframes = 150)
anim_save("sazonalidade_5.gif", animation = last_animation())
plot1 <- ggplot(dados_plot_cor, aes(x = Mes, y = Valor, color = -Valor)) +
geom_point(size = 3) +
geom_text(aes(label = format(round(Valor/1000,0),
big.mark = ".",
decimal.mark = ","),
y = Valor + 10000),
size = 4, family = "Source Sans Pro") +
#scale_color_viridis(option = "plasma") +
scale_colour_gradientn(colours = rev(brewer.pal(8, "YlOrRd")[2:8])) +
coord_polar(theta = "x", start = 0, direction = 1) +
scale_y_continuous(labels = function(x) {format(x/1000, big.mark = ".", decimal.mark = ",")}) +
labs(
y = "Bilhões de R$",
x = NULL
) +
tema() +
theme(legend.position = 'none',
panel.grid.major.y = element_line(color = "grey80", linetype = "dotted"),
panel.grid.major.x = element_line(color = "grey90", linetype = "solid"),
axis.title.y = element_text(hjust = 0.85))
plot_din1 <- plot1 +
labs(subtitle = "Resgates Mensais da Dívida Pública Federal em {frame_time}") +
transition_time(Ano) +
#shadow_wake(wake_length = 1, alpha = .15, size = 1, exclude_layer = 2) +
#shadow_mark(alpha = .15, size = 2, color = "grey60", exclude_layer = 2) +
ease_aes('linear')
animate(plot_din1, nframes = 100, height = 480, width = 800, type = "cairo")
anim_save("resgates_divida_bolinhas.gif", animation = last_animation())
# dados_plot_cor <- resgates %>% filter(Ano == 2014)
dados_plot_cor <- resgates
plot1 <- ggplot(dados_plot_cor, aes(x = Mes, y = Valor, fill = -Valor)) +
geom_col(position = "dodge", width = 0.4) +
geom_text(aes(label = format(round(Valor/1000,0),
big.mark = ".",
decimal.mark = ","),
y = Valor + 11000),
size = 5, family = "Source Sans Pro", color = "grey20") +
scale_fill_gradientn(colours = rev(brewer.pal(8, "YlOrRd")[2:8])) +
coord_polar(theta = "x", start = 0, direction = 1) +
scale_y_continuous(limits = c(-50000, NA), labels = function(x) {format(x/1000, big.mark = ".", decimal.mark = ",")}) +
labs(
y = "Bilhões de R$",
x = NULL
) +
tema() +
theme(legend.position = 'none',
panel.grid.major.y = element_line(color = "grey80", linetype = "dotted"),
panel.grid.major.x = element_line(color = "grey90", linetype = "solid"),
axis.title.y = element_text(hjust = 0.85))
plot_din <- plot1 +
labs(subtitle = "{closest_state}") +
transition_states(Ano, 1, 4, wrap = FALSE)
animate(plot_din + ease_aes('quadratic-in-out'), bg = 'transparent', height = 488, width = 688, type = "cairo")
plot_din <- plot1 +
labs(subtitle = "{closest_state}") +
transition_states(Ano, 1, 3, wrap = FALSE)
animation::ani.options(antialias = "cleartype")
animate(plot_din + ease_aes('sine-in-out'), bg = 'transparent', height = 488, width = 688, type = "cairo")
summary(resgates$Valor)
maximo = 175000
qde_cores = 7
intervalo = maximo / qde_cores
resgates_frag <- resgates # criando uma cópia
niveis_faixas <- NULL
for (i in 1:qde_cores) {
nome_coluna <- paste0("Faixa ", (i-1)*intervalo,'-', i*intervalo)
resgates_frag[[nome_coluna]] <- # (1)
ifelse(resgates_frag$Valor/(i*intervalo) > 1, # (2)
intervalo,
ifelse(resgates_frag$Valor - (i-1)*intervalo < 0,
0,
resgates_frag$Valor - (i-1)*intervalo))
niveis_faixas <- c(niveis_faixas, nome_coluna) # (3)
}
resgates_frag <- resgates_frag %>%
gather(contains("Faixa"), key = "Faixa", value = "Valor_faixa") %>%
mutate(Faixa = factor(Faixa, levels = rev(niveis_faixas)))
paleta <- rev(brewer.pal(8, "YlOrRd")[2:8])
paleta_rgb <- col2rgb(paleta)
paleta_darker <- NULL
fator <- 1.15
for (i in 1:dim(paleta_rgb)[2] ) {
paleta_darker <- c(paleta_darker,
rgb(paleta_rgb[1,i] %/% fator,
paleta_rgb[2,i] %/% fator,
paleta_rgb[3,i] %/% fator, maxColorValue = 255))
}
# dados_plot_frag <- resgates_frag %>% filter(Ano == 2014)
dados_plot_frag <- resgates_frag
plot_equalizador <- ggplot(dados_plot_frag, aes(x = Mes, y = Valor_faixa, fill = Faixa)) +
geom_col(width = 0.4, color = 'white') +
geom_text(aes(label = format(round(Valor/1000,0),
big.mark = ".",
decimal.mark = ","),
y = Valor + 15000,
color = Valor),
size = 5, fontface = 'plain',
family = "Open Sans") +
scale_y_continuous(limits = c(-50000, NA), breaks = (0:7)*intervalo,
labels = function(x) {format(x/1000, big.mark = ".", decimal.mark = ",")}) +
#scale_fill_manual(values = rev(brewer.pal(8, "YlOrRd")[2:8])) +
#scale_colour_gradientn(colours = brewer.pal(8, "YlOrRd")[2:8]) +
#coord_polar(theta = "x", start = 0, direction = 1) +
scale_fill_manual(values = paleta_darker) +
scale_color_gradientn(colors = rev(paleta_darker)) +
labs(
y = "Bilhões de R$",
x = NULL
) +
tema() +
theme(legend.position = 'none',
panel.grid.major.y = element_line(color = "white", linetype = "dotted"),
panel.grid.major.x = element_line(color = "white", linetype = "solid"),
axis.title.y = element_text(hjust = 0.90,
family = "Open Sans Condensed",
color = "#1E4C7A"))
# plot_equalizador
plot_eq_polar <- plot_equalizador + coord_polar(theta = "x", start = 0, direction = 1)
# plot_eq_polar
plot_din_frag <- plot_eq_polar + # + theme(panel.grid.major.x = element_blank())
labs(subtitle = "{closest_state}") +
transition_states(Ano, 1, 4, wrap = FALSE)
animate(plot_din_frag + ease_aes('linear'),
#bg = 'transparent',
height = 488, width = 688, type = 'cairo') #,
plot_din_frag <- plot_eq_polar + # + theme(panel.grid.major.x = element_blank())
labs(subtitle = "{closest_state}") +
transition_states(Ano, 1, 3, wrap = FALSE)
animate(plot_din_frag + ease_aes('linear'), nframes = 120,
#bg = 'transparent',
height = 488, width = 688, type = 'cairo') #,
plot_din_frag <- plot_eq_polar + # + theme(panel.grid.major.x = element_blank())
labs(subtitle = "Resgates da DPF em {closest_state}") +
transition_states(Ano, 1, 3, wrap = FALSE)
animate(plot_din_frag + ease_aes('linear'), nframes = 120,
#bg = 'transparent',
height = 488, width = 688, type = 'cairo') #,
anim_save("divida_polar_f.gif", animation = last_animation())
plot1 <- ggplot(dados_plot_cor, aes(x = Mes, y = Valor, color = -Valor)) +
geom_point(size = 3) +
geom_text(aes(label = format(round(Valor/1000,0),
big.mark = ".",
decimal.mark = ","),
y = Valor + 10000),
size = 4, family = "Source Sans Pro") +
#scale_color_viridis(option = "plasma") +
scale_colour_gradientn(colours = rev(brewer.pal(8, "YlOrRd")[2:8])) +
coord_polar(theta = "x", start = 0, direction = 1) +
scale_y_continuous(labels = function(x) {format(x/1000, big.mark = ".", decimal.mark = ",")}) +
labs(
y = "Bilhões de R$",
x = NULL
) +
tema() +
theme(legend.position = 'none',
panel.grid.major.y = element_line(color = "grey80", linetype = "dotted"),
panel.grid.major.x = element_line(color = "grey90", linetype = "solid"),
axis.title.y = element_text(hjust = 0.85))
plot_din1 <- plot1 +
labs(subtitle = "Resgates Mensais da Dívida Pública Federal em {frame_time}") +
transition_time(Ano) +
#shadow_wake(wake_length = 1, alpha = .15, size = 1, exclude_layer = 2) +
#shadow_mark(alpha = .15, size = 2, color = "grey60", exclude_layer = 2) +
ease_aes('linear')
animate(plot_din1, nframes = 120, height = 480, width = 800, type = "cairo")
anim_save("resgates_divida_bolinhas.gif", animation = last_animation())
